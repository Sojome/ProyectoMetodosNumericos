/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Pantalla;

import java.text.DecimalFormat;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Aaron
 */
public class Muller extends javax.swing.JFrame {

    /**
     * Creates new form PuntoFijo
     */
    public Muller() {
        initComponents();
        this.setLocationRelativeTo(null);
        //Hacer el metodo
        int intentos;
        double a, b, c, d, raiz1, raiz2, raiz3;
        Interfaza inter = new Interfaza();
        a=inter.a;
        b=inter.b;
        c=inter.c;
        d=inter.d;
        raiz1=inter.metd6a;
        raiz2=inter.metd6b;
        raiz3=inter.metd6c;
        intentos=inter.intentos;
        //COdigo para hacer la tabla
        DefaultTableModel modelo1 = (DefaultTableModel) tblFormula1.getModel();
        hacertabla(intentos, raiz1, raiz2, raiz3, a, b, c, d, modelo1, txtInformacion);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFormula1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtInformacion = new javax.swing.JLabel();

        setTitle("Muller - Aaron Jaramillo");

        jPanel2.setBackground(new java.awt.Color(0, 51, 204));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        tblFormula1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No", "x0", "x1", "x2", "f0", "f1", "f2", "f(x1, x0)", "f(x2, x1)", "f(x2, x1, x0)l", "c", "b", "a", "d1", "d2", "min", "xr", "fxr", "fxr"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblFormula1.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(tblFormula1);

        jPanel1.setBackground(new java.awt.Color(255, 153, 51));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setFont(new java.awt.Font("Arial", 1, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Muller");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(txtInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 556, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1013, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtInformacion, javax.swing.GroupLayout.PREFERRED_SIZE, 0, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jScrollPane1.setViewportView(jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public static void hacertabla(int intentos, double raiz1, double raiz2, double raiz3, double a, double b, double c, double d, DefaultTableModel modelo, JLabel info){
        int []n = new int[intentos];
        double [] x0 = new double[intentos];
        double [] x1 = new double[intentos];
        double [] x2 = new double[intentos];
        double [] xr = new double[intentos];
        double [] f0 = new double[intentos];
        double [] f1 = new double[intentos];
        double [] f2 = new double[intentos];
        double [] fx1x0 = new double[intentos];
        double [] fx2x1 = new double[intentos];
        double [] fx2x1x0 = new double[intentos];
        double [] fxr = new double[intentos];
        double [] varc = new double[intentos];
        double [] varb = new double[intentos];
        double [] vara = new double[intentos];
        double [] fd1 = new double[intentos];
        double [] fd2 = new double[intentos];
        double [] error = new double[intentos];
        double [] mini = new double[intentos]; 
        
        int eleccion=0;
        double calculoa=0;
        for(int i=0; i<intentos; i++)
        {
            n[i]=(i+1);
            if(i==0)
            {
                x0[i]=raiz1;
                x1[i]=raiz2;
                x2[i]=raiz3;
            }
            else
            {
                x0[i]=x1[i-1];
                x1[i]=x2[i-1];
                x2[i]=xr[i-1];
            }
            
            f0[i]=FuncionEntrante(a, b, c, d, x0[i]);
            f1[i]=FuncionEntrante(a, b, c, d, x1[i]);
            f2[i]=FuncionEntrante(a, b, c, d, x2[i]);
            fx1x0[i]=((double)f1[i]-(double)f0[i])/((double)x1[i]-(double)x0[i]);
            fx2x1[i]=((double)f2[i]-(double)f1[i])/((double)x2[i]-(double)x1[i]);
            fx2x1x0[i]=(double)fx2x1[i]-(double)fx1x0[i];
            varc[i]=(double)fx2x1x0[i];
            varb[i]=(double)fx2x1[i]-(((double)x2[i]+(double)x1[i])*varc[i]);
            vara[i]=(double)f2[i]-(double)x2[i]*((double)fx2x1[i]-((double)x1[i]*(double)varc[i]));
            calculoa=Math.sqrt((double)Math.pow(varb[i], 2)-((double)4*(double)vara[i]*(double)varc[i]));
            fd1[i]=-(double)varb[i]+(double)calculoa;
            fd2[i]=-(double)varb[i]-(double)calculoa;
            
            if(Math.abs((double)fd2[i])<Math.abs((double)fd1[i]))
            {
                mini[i]=Math.abs((double)fd2[i]);
                if(n[i]==1)
                {
                    eleccion=1;
                }
                //xr[i]=((double)2*(double)vara[i])/(double)fd2[i];
            }
            else
            {
                mini[i]=Math.abs((double)fd1[i]);
                if(n[i]==1)
                {
                    eleccion=2;
                }
                //xr[i]=((double)2*(double)vara[i])/(double)fd1[i];
            }
            
            switch(eleccion){
                case 1:
                    xr[i]=((double)2*(double)vara[i])/(double)fd2[i];
                    break;
                case 2:
                    xr[i]=((double)2*(double)vara[i])/(double)fd1[i];
                    break;
            }
            
            fxr[i]=FuncionEntrante(a, b, c, d, xr[i]);
            
            if(i==0)
            {
                error[i]=0;
            }
            else
            {
                error[i]=Math.abs(xr[i]-xr[i-1]);
            }
        }
        
        Object []yano = new Object[19];
        //Añadir condiccion para que salga de este formato solo caundo sean menores  E-3
        //Poner condiccion cuando se encuentre la raiz, solo me muestre los resultados hasta ahi
        
        //Para mayores de E-3
	//DecimalFormat dh = new DecimalFormat("##0.####");
	//Para menores de E-3
	//DecimalFormat df = new DecimalFormat("0.####E0");
        
        for(int i=0; i<intentos; i++)
        {
            yano[0]=n[i];
            yano[1]=CKambio(x0[i]);
            yano[2]=CKambio(x1[i]);
            yano[3]=CKambio(x2[i]);
            yano[4]=CKambio(f0[i]);
            yano[5]=CKambio(f1[i]);
            yano[6]=CKambio(f2[i]);
            yano[7]=CKambio(fx1x0[i]);
            yano[8]=CKambio(fx2x1[i]);
            yano[9]=CKambio(fx2x1x0[i]);
            yano[10]=CKambio(vara[i]);
            yano[11]=CKambio(varb[i]);
            yano[12]=CKambio(varc[i]);
            yano[13]=CKambio(fd1[i]);
            yano[14]=CKambio(fd2[i]);
            yano[15]=CKambio(mini[i]);
            yano[16]=CKambio(xr[i]);
            yano[17]=CKambio(fxr[i]);
            yano[18]=CKambio(error[i]);
            //Añadir fila
            modelo.addRow(yano);
            //Romper bucle
            //if(n1[i]!=1 && fXr1[i]==0)
            if(n[i]!=1 && Math.abs(fxr[i])< 1E-7)
            {
                break;
            }
            else if(n[i]==intentos)
            {
                info.setText("No converge porque la funcion no es  menor a E-7");
                //JOptionPane.showMessageDialog(null, "No converge porque la funcion no es  menor a E-7", "NO CONVERGE", JOptionPane.WARNING_MESSAGE);
            }
        }
    }
    public static double FuncionEntrante(double a, double b, double c, double d, double x){
        double resultado=0;
        resultado=(a*Math.pow(x, (double)3))+(b*Math.pow(x, (double)2))+(c*x)+d;
        return resultado;
    }
    
    public static double FuncionDerivada(double a, double b, double c, double x){
        double resultado=0;
        resultado=(3*a*Math.pow(x, (double)2))+(2*b*x)+c;
        return resultado;
    }
    
    public static double FuncionSacarOtraX(double a, double b, double c){
        double resultado=0;
        resultado=(double)a-((double)b/(double)c);
        return resultado;
    }
    
    public static String CKambio(Double num){
        //Para mayores de E-3
	DecimalFormat dh = new DecimalFormat("##0.########");
	//Para menores de E-3
	DecimalFormat df = new DecimalFormat("0.###E0");
        
        String cambio="";
        if(num==0){
                cambio = Double.toString(num);
            }else if( (num > 10E-3) || (num < -10E-3) ){
                cambio=dh.format(num);
            }else{
                cambio=df.format(num);
            }
        return cambio;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Muller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Muller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Muller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Muller.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Muller().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tblFormula1;
    private javax.swing.JLabel txtInformacion;
    // End of variables declaration//GEN-END:variables
}
